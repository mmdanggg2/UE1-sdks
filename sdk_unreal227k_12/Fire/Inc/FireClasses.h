/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/
#if ((_MSC_VER) || (HAVE_PRAGMA_PACK))
#pragma pack (push,OBJECT_ALIGNMENT)
#endif

#ifndef FIRE_API
#define FIRE_API DLL_IMPORT
#endif

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern FIRE_API FName FIRE_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif


#ifndef NAMES_ONLY

enum EColorFadeType : BYTE
{
	FC_Linear,
	FC_Sinusoidal,
	FC_MAX,
};
enum DMode : BYTE
{
	DRAW_Normal,
	DRAW_Lathe,
	DRAW_Lathe_2,
	DRAW_Lathe_3,
	DRAW_Lathe_4,
	DRAW_MAX,
};
enum ESpark : BYTE
{
	SPARK_Burn,
	SPARK_Sparkle,
	SPARK_Pulse,
	SPARK_Signal,
	SPARK_Blaze,
	SPARK_OzHasSpoken,
	SPARK_Cone,
	SPARK_BlazeRight,
	SPARK_BlazeLeft,
	SPARK_Cylinder,
	SPARK_Cylinder3D,
	SPARK_Lissajous,
	SPARK_Jugglers,
	SPARK_Emit,
	SPARK_Fountain,
	SPARK_Flocks,
	SPARK_Eels,
	SPARK_Organic,
	SPARK_WanderOrganic,
	SPARK_RandomCloud,
	SPARK_CustomCloud,
	SPARK_LocalCloud,
	SPARK_Stars,
	SPARK_LineLightning,
	SPARK_RampLightning,
	SPARK_SphereLightning,
	SPARK_Wheel,
	SPARK_Gametes,
	SPARK_Sprinkler,
	SPARK_MAX,
};
enum PanningType : BYTE
{
	SLIDE_Linear,
	SLIDE_Circular,
	SLIDE_Gestation,
	SLIDE_WavyX,
	SLIDE_WavyY,
	SLIDE_MAX,
};
enum TimingType : BYTE
{
	TIME_FrameRateSync,
	TIME_RealTimeScroll,
	TIME_MAX,
};
enum EProcMeshType : BYTE
{
	MT_Water,
	MT_Deform,
	MT_MAX,
};
enum ECombineOperation : BYTE
{
	CO_Add,
	CO_Subtract,
	CO_MaskOnly,
	CO_OverlayWithTransp,
	CO_MAX,
};
enum ETexOscillationType : BYTE
{
	OT_Pan,
	OT_Stretch,
	OT_MAX,
};
enum ETexRotationType : BYTE
{
	TR_FixedRotation,
	TR_ConstantlyRotating,
	TR_OscillatingRotation,
	TR_MAX,
};
enum WDrop : BYTE
{
	DROP_FixedDepth,
	DROP_PhaseSpot,
	DROP_ShallowSpot,
	DROP_HalfAmpl,
	DROP_RandomMover,
	DROP_FixedRandomSpot,
	DROP_WhirlyThing,
	DROP_BigWhirly,
	DROP_HorizontalLine,
	DROP_VerticalLine,
	DROP_DiagonalLine1,
	DROP_DiagonalLine2,
	DROP_HorizontalOsc,
	DROP_VerticalOsc,
	DROP_DiagonalOsc1,
	DROP_DiagonalOsc2,
	DROP_RainDrops,
	DROP_AreaClamp,
	DROP_LeakyTap,
	DROP_DrippyTap,
	DROP_MAX,
};

struct FSpark
{
	BYTE Type GCC_PACK(INT_ALIGNMENT);
	BYTE Heat;
	BYTE X;
	BYTE Y;
	BYTE ByteA;
	BYTE ByteB;
	BYTE ByteC;
	BYTE ByteD;

	friend FArchive& operator<<( FArchive& Ar, FSpark& S )
	{
		return  Ar << S.Type << S.Heat << S.X << S.Y << S.ByteA << S.ByteB << S.ByteC << S.ByteD;
	}
};
struct FColorModifyEntry
{
	FColor SourceColor GCC_PACK(INT_ALIGNMENT);
	FColor TargetColor;
	FLOAT Threshold;
};
struct FADrop
{
	BYTE Type GCC_PACK(INT_ALIGNMENT);
	BYTE depth;
	BYTE X;
	BYTE Y;
	BYTE ByteA;
	BYTE ByteB;
	BYTE ByteC;
	BYTE ByteD;
};

#define UCONST_MaxDrops 256

class FIRE_API AGrassDeco : public ADecoration
{
public:
	INT NearMaxPitchAngle GCC_PACK(INT_ALIGNMENT);
	FLOAT WaveOffset;
	FLOAT WaveFrequency;
	FLOAT WaveStrength;
	FLOAT WavePhase;
	FLOAT WaveRandPhase;
	FLOAT DistanceHigh;
	FLOAT DistanceLow;
	FLOAT DistanceLowScale;
	DECLARE_CLASS(AGrassDeco,ADecoration,0,Fire)
	#include "AGrassDeco.h"
};

class FIRE_API AFluidSurfaceInfo : public AFluidInfo
{
public:
	INT InitSize GCC_PACK(INT_ALIGNMENT);
	FLOAT PockTimer;
	FLOAT XGridSpace;
	FLOAT YGridSpace;
	FLOAT WaveDamping;
	FLOAT WaveRippleRate;
	FLOAT FluidSpeedScale;
	FLOAT WaveRippletSize;
	FLOAT WaveRippletRadius;
	FLOAT XOffset;
	FLOAT YOffset;
	FLOAT TexXSize;
	FLOAT TexYSize;
	FLOAT ZHeight[2];
	FLOAT NoRenderZHeight;
	class UStaticLightData* StaticLightD;
	TArrayNoInit<FMeshVertConnect> Connects;
	TArrayNoInit<INT> VertLinks;
	TArrayNoInit<BYTE> ClampedVerts;
	TArrayNoInit<class AFluidSurfaceOscillator*> Oscillators;
	class UFluidPrimitive* FluidData;
	struct FFluidSurfaceWorker* ThreadProc;
	BYTE SizeX;
	BYTE SizeY;
	BITFIELD bRenderTwoSided:1 GCC_PACK(INT_ALIGNMENT);
	BITFIELD bSquaredModel:1;
	BITFIELD bBSPClampsFluid:1;
	BITFIELD bUseNoRenderZ:1;
	BITFIELD bComputeLightVis:1;
	BITFIELD bConnectsInit:1;
	DECLARE_FUNCTION(execPockWaves);
	DECLARE_FUNCTION(execResetModel);
	DECLARE_CLASS(AFluidSurfaceInfo,AFluidInfo,0,Fire)
	#include "AFluidSurfaceInfo.h"
};

class FIRE_API AProceduralMesh : public AFluidInfo
{
public:
	FLOAT Dampening GCC_PACK(INT_ALIGNMENT);
	FLOAT MovementClamp[2];
	FLOAT ForceClamp[2];
	FLOAT ForceAttenuation;
	FLOAT Noise;
	FLOAT NoiseForce[2];
	FLOAT NoiseTimer[2];
	FLOAT NoiseCounter;
	class UMesh* SourceModel;
	class UProcPrimitive* ProcData;
	BYTE ProcType;
	BITFIELD bAnimate:1 GCC_PACK(INT_ALIGNMENT);
	DECLARE_FUNCTION(execProcPling);
	DECLARE_FUNCTION(execResetModel);
	DECLARE_CLASS(AProceduralMesh,AFluidInfo,0,Fire)
	#include "AProceduralMesh.h"
};

class FIRE_API AFluidSurfaceOscillator : public AInfo
{
public:
	FLOAT Frequency GCC_PACK(INT_ALIGNMENT);
	FLOAT Strength;
	FLOAT Radius;
	FLOAT OscTime;
	class AFluidSurfaceInfo* FluidSurface;
	BYTE Phase;
	DECLARE_CLASS(AFluidSurfaceOscillator,AInfo,0,Fire)
	#include "AFluidSurfaceOscillator.h"
};

class FIRE_API UConstantColor : public UTexture
{
public:
	FColor Color1 GCC_PACK(INT_ALIGNMENT);
	DECLARE_FUNCTION(execSetColor);
	DECLARE_CLASS(UConstantColor,UTexture,CLASS_SafeReplace,Fire)
	#include "UConstantColor.h"
};

class FIRE_API UFadeColor : public UConstantColor
{
public:
	FLOAT FadePeriod GCC_PACK(INT_ALIGNMENT);
	FLOAT FadePhase;
	FLOAT CurrentTime;
	FLOAT CurrentValue;
	FColor Color2;
	BYTE ColorFadeType;
	BITFIELD bPaused:1 GCC_PACK(INT_ALIGNMENT);
	DECLARE_CLASS(UFadeColor,UConstantColor,CLASS_SafeReplace,Fire)
	#include "UFadeColor.h"
};

class FIRE_API UFractalTexture : public UTexture
{
public:
	INT UMask GCC_PACK(INT_ALIGNMENT);
	INT VMask;
	INT LightOutput;
	INT SoundOutput;
	INT GlobalPhase;
	BYTE DrawPhase;
	BYTE AuxPhase;
	BYTE bHasInit;
	DECLARE_CLASS(UFractalTexture,UTexture,(CLASS_SafeReplace | CLASS_Abstract),Fire)
	#include "UFractalTexture.h"
};

class FIRE_API UFireTexture : public UFractalTexture
{
public:
	INT SparksLimit GCC_PACK(INT_ALIGNMENT);
	INT NumSparks;
	INT OldRenderHeat;
	TArrayNoInit<FSpark> Sparks;
	BYTE SparkType;
	BYTE RenderHeat;
	BYTE FX_Heat;
	BYTE FX_Size;
	BYTE FX_AuxSize;
	BYTE FX_Area;
	BYTE FX_Frequency;
	BYTE FX_Phase;
	BYTE FX_HorizSpeed;
	BYTE FX_VertSpeed;
	BYTE DrawMode;
	BYTE RenderTable[1028];
	BYTE StarStatus;
	BYTE PenDownX;
	BYTE PenDownY;
	BITFIELD bRising:1 GCC_PACK(INT_ALIGNMENT);
	DECLARE_CLASS(UFireTexture,UFractalTexture,(CLASS_RuntimeStatic | CLASS_SafeReplace),Fire)
	#include "UFireTexture.h"
};

class FIRE_API UIceTexture : public UFractalTexture
{
public:
	INT OldUDisplace GCC_PACK(INT_ALIGNMENT);
	INT OldVDisplace;
	INT ForceRefresh;
	FLOAT MasterCount;
	FLOAT UDisplace;
	FLOAT VDisplace;
	FLOAT UPosition;
	FLOAT VPosition;
	FLOAT TickAccu;
	class UTexture* GlassTexture;
	class UTexture* SourceTexture;
	class UTexture* OldGlassTex;
	class UTexture* OldSourceTex;
	BYTE* LocalSource;
	BYTE PanningStyle;
	BYTE TimeMethod;
	BYTE HorizPanSpeed;
	BYTE VertPanSpeed;
	BYTE Frequency;
	BYTE Amplitude;
	BITFIELD MoveIce:1 GCC_PACK(INT_ALIGNMENT);
	DECLARE_CLASS(UIceTexture,UFractalTexture,(CLASS_RuntimeStatic | CLASS_SafeReplace),Fire)
	#include "UIceTexture.h"
};

class FIRE_API UWaterTexture : public UFractalTexture
{
public:
	INT NumDrops GCC_PACK(INT_ALIGNMENT);
	INT OldWaveAmp;
	FADrop Drops[256];
	BYTE* SourceFields;
	BYTE DropType;
	BYTE WaveAmp;
	BYTE FX_Frequency;
	BYTE FX_Phase;
	BYTE FX_Amplitude;
	BYTE FX_Speed;
	BYTE FX_Radius;
	BYTE FX_Size;
	BYTE FX_Depth;
	BYTE FX_Time;
	BYTE RenderTable[1028];
	BYTE WaterTable[1536];
	BYTE WaterParity;
	DECLARE_CLASS(UWaterTexture,UFractalTexture,(CLASS_RuntimeStatic | CLASS_SafeReplace | CLASS_Abstract),Fire)
	#include "UWaterTexture.h"
};

class FIRE_API UWaveTexture : public UWaterTexture
{
public:
	BYTE BumpMapLight GCC_PACK(INT_ALIGNMENT);
	BYTE BumpMapAngle;
	BYTE PhongRange;
	BYTE PhongSize;
	DECLARE_CLASS(UWaveTexture,UWaterTexture,(CLASS_RuntimeStatic | CLASS_SafeReplace),Fire)
	#include "UWaveTexture.h"
};

class FIRE_API UWetTexture : public UWaterTexture
{
public:
	class UTexture* SourceTexture GCC_PACK(INT_ALIGNMENT);
	class UTexture* OldSourceTex;
	BYTE* LocalSourceBitmap;
	DECLARE_CLASS(UWetTexture,UWaterTexture,(CLASS_RuntimeStatic | CLASS_SafeReplace),Fire)
	#include "UWetTexture.h"
};

class FIRE_API UModulateToAlpha : public UTexture
{
public:
	class UTexture* SourceTexture GCC_PACK(INT_ALIGNMENT);
	class UTexture* OldTexture;
	class UPalette* OldPalette;
	BITFIELD bSourceValid:1 GCC_PACK(INT_ALIGNMENT);
	DECLARE_CLASS(UModulateToAlpha,UTexture,CLASS_SafeReplace,Fire)
	#include "UModulateToAlpha.h"
};

class FIRE_API UPaletteModifier : public UTexture
{
public:
	class UTexture* SourceTexture GCC_PACK(INT_ALIGNMENT);
	TArrayNoInit<FColorModifyEntry> ColorModifiers;
	BYTE SaturationModifier;
	BYTE HueModifier;
	BYTE BrightnessModifier;
	BITFIELD bSourceValid:1 GCC_PACK(INT_ALIGNMENT);
	DECLARE_FUNCTION(execRefreshTexture);
	DECLARE_CLASS(UPaletteModifier,UTexture,CLASS_SafeReplace,Fire)
	#include "UPaletteModifier.h"
};

class FIRE_API UTextureModifierBase : public UTexture
{
public:
	DECLARE_FUNCTION(execInitImage);
	DECLARE_CLASS(UTextureModifierBase,UTexture,(CLASS_SafeReplace | CLASS_Abstract),Fire)
	#include "UTextureModifierBase.h"
};

class FIRE_API UMaterialSequence : public UTextureModifierBase
{
public:
	INT MatUSize GCC_PACK(INT_ALIGNMENT);
	INT MatVSize;
	FLOAT CurrentTime;
	class UTexture* ConstFrameTex;
	class UTexture* SoftwareFallback;
	TArrayNoInit<FMaterialSequenceItem> SequenceItems;
	BITFIELD Loop:1 GCC_PACK(INT_ALIGNMENT);
	BITFIELD Paused:1;
	DECLARE_CLASS(UMaterialSequence,UTextureModifierBase,CLASS_SafeReplace,Fire)
	#include "UMaterialSequence.h"
};

class FIRE_API UTexCombiner : public UTextureModifierBase
{
public:
	INT MatUSize GCC_PACK(INT_ALIGNMENT);
	INT MatVSize;
	INT MaterialAScale[2];
	INT MaterialBScale[2];
	INT MaterialCScale[2];
	class UTexture* Material1;
	class UTexture* Material2;
	class UTexture* MaskTexture;
	class UTexture* SoftwareFallback;
	BYTE CombineOperation;
	BITFIELD bStaticFrame:1 GCC_PACK(INT_ALIGNMENT);
	BITFIELD bComputedFrame:1;
	DECLARE_CLASS(UTexCombiner,UTextureModifierBase,CLASS_SafeReplace,Fire)
	#include "UTexCombiner.h"
};

class FIRE_API UTexModifier : public UTextureModifierBase
{
public:
	class UTexture* Material GCC_PACK(INT_ALIGNMENT);
	class UTexture* OldVerifiedMaterial;
	TArrayNoInit<INT> PtrList;
	FCoords2D TexCoords;
	BYTE BitMapScaling[2];
	BYTE OldVBits;
	BYTE OldUBits;
	BYTE OldBitScaler[2];
	BITFIELD bSoftwarePreview:1 GCC_PACK(INT_ALIGNMENT);
	BITFIELD bTextureOK:1;
	BITFIELD bSourceDirty:1;
	DECLARE_CLASS(UTexModifier,UTextureModifierBase,(CLASS_SafeReplace | CLASS_Abstract),Fire)
	#include "UTexModifier.h"
};

class FIRE_API UTexOscillator : public UTexModifier
{
public:
	FLOAT UOscillationRate GCC_PACK(INT_ALIGNMENT);
	FLOAT VOscillationRate;
	FLOAT UOscillationAmplitude;
	FLOAT VOscillationAmplitude;
	FLOAT UOffset;
	FLOAT VOffset;
	FLOAT UStretchOffset;
	FLOAT VStretchOffset;
	FLOAT LastSu;
	FLOAT ScalerU;
	FLOAT LastSv;
	FLOAT ScalerV;
	BYTE UOscillationType;
	BYTE VOscillationType;
	DECLARE_CLASS(UTexOscillator,UTexModifier,CLASS_SafeReplace,Fire)
	#include "UTexOscillator.h"
};

class FIRE_API UTexPanner : public UTexModifier
{
public:
	FVector InitPanning GCC_PACK(INT_ALIGNMENT);
	FVector PanningSpeed;
	FVector PrevInitPan;
	FVector CurPanning;
	DECLARE_CLASS(UTexPanner,UTexModifier,CLASS_SafeReplace,Fire)
	#include "UTexPanner.h"
};

class FIRE_API UTexRotator : public UTexModifier
{
public:
	INT RenderAngle GCC_PACK(INT_ALIGNMENT);
	FLOAT Rotation;
	FLOAT UOffset;
	FLOAT VOffset;
	FLOAT OscillationRate;
	FLOAT OscillationAmplitude;
	FLOAT CurrentAngle;
	BYTE TexRotationType;
	BITFIELD bWasFixedRot:1 GCC_PACK(INT_ALIGNMENT);
	DECLARE_CLASS(UTexRotator,UTexModifier,CLASS_SafeReplace,Fire)
	#include "UTexRotator.h"
};

class FIRE_API UTexScaler : public UTexModifier
{
public:
	FLOAT XScaling GCC_PACK(INT_ALIGNMENT);
	FLOAT YScaling;
	FLOAT XOffset;
	FLOAT YOffset;
	FLOAT OldValues[4];
	DECLARE_CLASS(UTexScaler,UTexModifier,CLASS_SafeReplace,Fire)
	#include "UTexScaler.h"
};

class FIRE_API UFluidSurfaceRI : public URenderIterator
{
public:
	DECLARE_CLASS(UFluidSurfaceRI,URenderIterator,CLASS_Transient,Fire)

	UFluidSurfaceRI() {}
	AActor* GetActors();
};

#endif

AUTOGENERATE_FUNCTION(UConstantColor,-1,execSetColor);
AUTOGENERATE_FUNCTION(AFluidSurfaceInfo,-1,execPockWaves);
AUTOGENERATE_FUNCTION(AFluidSurfaceInfo,-1,execResetModel);
AUTOGENERATE_FUNCTION(UPaletteModifier,-1,execRefreshTexture);
AUTOGENERATE_FUNCTION(AProceduralMesh,-1,execProcPling);
AUTOGENERATE_FUNCTION(AProceduralMesh,-1,execResetModel);
AUTOGENERATE_FUNCTION(UTextureModifierBase,-1,execInitImage);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif // NAMES_ONLY

#if ((_MSC_VER) || (HAVE_PRAGMA_PACK))
#pragma pack (pop)
#endif

#ifdef VERIFY_CLASS_SIZES
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,ConstantColor,Color1)
VERIFY_CLASS_SIZE_NODIE(UConstantColor)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FadeColor,FadePeriod)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FadeColor,FadePhase)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FadeColor,CurrentTime)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FadeColor,CurrentValue)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FadeColor,Color2)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FadeColor,ColorFadeType)
VERIFY_CLASS_SIZE_NODIE(UFadeColor)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,SparksLimit)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,NumSparks)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,OldRenderHeat)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,Sparks)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,SparkType)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,RenderHeat)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,FX_Heat)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,FX_Size)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,FX_AuxSize)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,FX_Area)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,FX_Frequency)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,FX_Phase)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,FX_HorizSpeed)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,FX_VertSpeed)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,DrawMode)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,RenderTable)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,StarStatus)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,PenDownX)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FireTexture,PenDownY)
VERIFY_CLASS_SIZE_NODIE(UFireTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,InitSize)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,PockTimer)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,XGridSpace)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,YGridSpace)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,WaveDamping)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,WaveRippleRate)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,FluidSpeedScale)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,WaveRippletSize)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,WaveRippletRadius)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,XOffset)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,YOffset)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,TexXSize)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,TexYSize)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,ZHeight)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,NoRenderZHeight)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,StaticLightD)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,Connects)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,VertLinks)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,ClampedVerts)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,Oscillators)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,FluidData)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,ThreadProc)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,SizeX)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceInfo,SizeY)
VERIFY_CLASS_SIZE_NODIE(AFluidSurfaceInfo)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceOscillator,Frequency)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceOscillator,Strength)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceOscillator,Radius)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceOscillator,OscTime)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceOscillator,FluidSurface)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,FluidSurfaceOscillator,Phase)
VERIFY_CLASS_SIZE_NODIE(AFluidSurfaceOscillator)
VERIFY_CLASS_SIZE_NODIE(UFluidSurfaceRI)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FractalTexture,UMask)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FractalTexture,VMask)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FractalTexture,LightOutput)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FractalTexture,SoundOutput)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FractalTexture,GlobalPhase)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FractalTexture,DrawPhase)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FractalTexture,AuxPhase)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,FractalTexture,bHasInit)
VERIFY_CLASS_SIZE_NODIE(UFractalTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,GrassDeco,NearMaxPitchAngle)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,GrassDeco,WaveOffset)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,GrassDeco,WaveFrequency)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,GrassDeco,WaveStrength)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,GrassDeco,WavePhase)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,GrassDeco,WaveRandPhase)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,GrassDeco,DistanceHigh)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,GrassDeco,DistanceLow)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,GrassDeco,DistanceLowScale)
VERIFY_CLASS_SIZE_NODIE(AGrassDeco)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,OldUDisplace)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,OldVDisplace)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,ForceRefresh)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,MasterCount)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,UDisplace)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,VDisplace)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,UPosition)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,VPosition)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,TickAccu)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,GlassTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,SourceTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,OldGlassTex)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,OldSourceTex)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,LocalSource)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,PanningStyle)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,TimeMethod)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,HorizPanSpeed)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,VertPanSpeed)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,Frequency)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,IceTexture,Amplitude)
VERIFY_CLASS_SIZE_NODIE(UIceTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,MaterialSequence,MatUSize)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,MaterialSequence,MatVSize)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,MaterialSequence,CurrentTime)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,MaterialSequence,ConstFrameTex)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,MaterialSequence,SoftwareFallback)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,MaterialSequence,SequenceItems)
VERIFY_CLASS_SIZE_NODIE(UMaterialSequence)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,ModulateToAlpha,SourceTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,ModulateToAlpha,OldTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,ModulateToAlpha,OldPalette)
VERIFY_CLASS_SIZE_NODIE(UModulateToAlpha)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,PaletteModifier,SourceTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,PaletteModifier,ColorModifiers)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,PaletteModifier,SaturationModifier)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,PaletteModifier,HueModifier)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,PaletteModifier,BrightnessModifier)
VERIFY_CLASS_SIZE_NODIE(UPaletteModifier)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,ProceduralMesh,Dampening)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,ProceduralMesh,MovementClamp)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,ProceduralMesh,ForceClamp)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,ProceduralMesh,ForceAttenuation)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,ProceduralMesh,Noise)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,ProceduralMesh,NoiseForce)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,ProceduralMesh,NoiseTimer)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,ProceduralMesh,NoiseCounter)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,ProceduralMesh,SourceModel)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,ProceduralMesh,ProcData)
VERIFY_CLASS_OFFSET_NODIE_SLOW(A,ProceduralMesh,ProcType)
VERIFY_CLASS_SIZE_NODIE(AProceduralMesh)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexCombiner,MatUSize)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexCombiner,MatVSize)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexCombiner,MaterialAScale)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexCombiner,MaterialBScale)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexCombiner,MaterialCScale)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexCombiner,Material1)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexCombiner,Material2)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexCombiner,MaskTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexCombiner,SoftwareFallback)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexCombiner,CombineOperation)
VERIFY_CLASS_SIZE_NODIE(UTexCombiner)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexModifier,Material)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexModifier,OldVerifiedMaterial)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexModifier,PtrList)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexModifier,TexCoords)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexModifier,BitMapScaling)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexModifier,OldVBits)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexModifier,OldUBits)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexModifier,OldBitScaler)
VERIFY_CLASS_SIZE_NODIE(UTexModifier)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,UOscillationRate)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,VOscillationRate)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,UOscillationAmplitude)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,VOscillationAmplitude)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,UOffset)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,VOffset)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,UStretchOffset)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,VStretchOffset)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,LastSu)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,ScalerU)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,LastSv)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,ScalerV)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,UOscillationType)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexOscillator,VOscillationType)
VERIFY_CLASS_SIZE_NODIE(UTexOscillator)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexPanner,InitPanning)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexPanner,PanningSpeed)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexPanner,PrevInitPan)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexPanner,CurPanning)
VERIFY_CLASS_SIZE_NODIE(UTexPanner)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexRotator,RenderAngle)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexRotator,Rotation)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexRotator,UOffset)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexRotator,VOffset)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexRotator,OscillationRate)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexRotator,OscillationAmplitude)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexRotator,CurrentAngle)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexRotator,TexRotationType)
VERIFY_CLASS_SIZE_NODIE(UTexRotator)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexScaler,XScaling)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexScaler,YScaling)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexScaler,XOffset)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexScaler,YOffset)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,TexScaler,OldValues)
VERIFY_CLASS_SIZE_NODIE(UTexScaler)
VERIFY_CLASS_SIZE_NODIE(UTextureModifierBase)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,NumDrops)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,OldWaveAmp)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,Drops)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,SourceFields)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,DropType)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,WaveAmp)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,FX_Frequency)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,FX_Phase)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,FX_Amplitude)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,FX_Speed)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,FX_Radius)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,FX_Size)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,FX_Depth)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,FX_Time)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,RenderTable)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,WaterTable)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaterTexture,WaterParity)
VERIFY_CLASS_SIZE_NODIE(UWaterTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaveTexture,BumpMapLight)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaveTexture,BumpMapAngle)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaveTexture,PhongRange)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WaveTexture,PhongSize)
VERIFY_CLASS_SIZE_NODIE(UWaveTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WetTexture,SourceTexture)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WetTexture,OldSourceTex)
VERIFY_CLASS_OFFSET_NODIE_SLOW(U,WetTexture,LocalSourceBitmap)
VERIFY_CLASS_SIZE_NODIE(UWetTexture)
#endif // VERIFY_CLASS_SIZES
