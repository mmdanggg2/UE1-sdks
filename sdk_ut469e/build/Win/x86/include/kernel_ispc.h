//
// C:/GameDev/UnrealTournament/External/cmake-build-windows-x86/KTexComp-prefix/src/KTexComp-build/ispc_texcomp/kernel_ispc.h
// (Header automatically generated by the ispc compiler.)
// DO NOT EDIT THIS FILE.
//

#pragma once
#include <stdint.h>



#ifdef __cplusplus
namespace ispc { /* namespace */
#endif // __cplusplus


#ifndef __ISPC_ALIGN__
#if defined(__clang__) || !defined(_MSC_VER)
// Clang, GCC, ICC
#define __ISPC_ALIGN__(s) __attribute__((aligned(s)))
#define __ISPC_ALIGNED_STRUCT__(s) struct __ISPC_ALIGN__(s)
#else
// Visual Studio
#define __ISPC_ALIGN__(s) __declspec(align(s))
#define __ISPC_ALIGNED_STRUCT__(s) __ISPC_ALIGN__(s) struct
#endif
#endif

#ifndef __ISPC_STRUCT_Surface_RGBA16__
#define __ISPC_STRUCT_Surface_RGBA16__
struct Surface_RGBA16 {
    uint8_t * Ptr;
    int32_t Width;
    int32_t Height;
    int32_t Stride;
};
#endif

#ifndef __ISPC_STRUCT_Surface_RGBA8__
#define __ISPC_STRUCT_Surface_RGBA8__
struct Surface_RGBA8 {
    uint8_t * Ptr;
    int32_t Width;
    int32_t Height;
    int32_t Stride;
};
#endif

#ifndef __ISPC_STRUCT_Surface_R16__
#define __ISPC_STRUCT_Surface_R16__
struct Surface_R16 {
    uint8_t * Ptr;
    int32_t Width;
    int32_t Height;
    int32_t Stride;
};
#endif

#ifndef __ISPC_STRUCT_Surface_R8__
#define __ISPC_STRUCT_Surface_R8__
struct Surface_R8 {
    uint8_t * Ptr;
    int32_t Width;
    int32_t Height;
    int32_t Stride;
};
#endif

#ifndef __ISPC_STRUCT_Surface_RG16__
#define __ISPC_STRUCT_Surface_RG16__
struct Surface_RG16 {
    uint8_t * Ptr;
    int32_t Width;
    int32_t Height;
    int32_t Stride;
};
#endif

#ifndef __ISPC_STRUCT_Surface_RG8__
#define __ISPC_STRUCT_Surface_RG8__
struct Surface_RG8 {
    uint8_t * Ptr;
    int32_t Width;
    int32_t Height;
    int32_t Stride;
};
#endif


///////////////////////////////////////////////////////////////////////////
// Functions exported from ispc code
///////////////////////////////////////////////////////////////////////////
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
extern "C" {
#endif // __cplusplus
    extern void BC1CompressRGBA16(struct Surface_RGBA16 * InputSurface, uint8_t * OutputBlocks);
    extern void BC1CompressRGBA8(struct Surface_RGBA8 * InputSurface, uint8_t * OutputBlocks);
    extern void BC1PACompressRGBA16(struct Surface_RGBA16 * InputSurface, uint8_t * OutputBlocks);
    extern void BC1PACompressRGBA8(struct Surface_RGBA8 * InputSurface, uint8_t * OutputBlocks);
    extern void BC2CompressRGBA16(struct Surface_RGBA16 * InputSurface, uint8_t * OutputBlocks);
    extern void BC2CompressRGBA8(struct Surface_RGBA8 * InputSurface, uint8_t * OutputBlocks);
    extern void BC3CompressRGBA16(struct Surface_RGBA16 * InputSurface, uint8_t * OutputBlocks);
    extern void BC3CompressRGBA8(struct Surface_RGBA8 * InputSurface, uint8_t * OutputBlocks);
    extern void BC4CompressR16(struct Surface_R16 * InputSurface, uint8_t * OutputBlocks);
    extern void BC4CompressR8(struct Surface_R8 * InputSurface, uint8_t * OutputBlocks);
    extern void BC5CompressRG16(struct Surface_RG16 * InputSurface, uint8_t * OutputBlocks);
    extern void BC5CompressRG8(struct Surface_RG8 * InputSurface, uint8_t * OutputBlocks);
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
} /* end extern C */
#endif // __cplusplus


#ifndef __ISPC_ALIGN__
#if defined(__clang__) || !defined(_MSC_VER)
// Clang, GCC, ICC
#define __ISPC_ALIGN__(s) __attribute__((aligned(s)))
#define __ISPC_ALIGNED_STRUCT__(s) struct __ISPC_ALIGN__(s)
#else
// Visual Studio
#define __ISPC_ALIGN__(s) __declspec(align(s))
#define __ISPC_ALIGNED_STRUCT__(s) __ISPC_ALIGN__(s) struct
#endif
#endif



#ifdef __cplusplus
} /* namespace */
#endif // __cplusplus
