// =============================================================================
// UT Demo Manager v3.4
// Originally written by UsAaR33
// Project continued by AnthraX after v3.0
// =============================================================================

// ============================================================
// udemo.DemoReader: Non-native class to be able to point to windows.. and easier for updates.
// ============================================================
class DemoReader expands udnative;

var DemoMainClientWindow Control;
var bool bBlocked; //prevent any package adding!
var localized string LocDemoSummary;
var localized string LocDemoSummaryAvailable;
var localized string LocDemoSummaryInformation;
var localized string LocDemoSummaryMapName;
var localized string LocDemoSummaryDemoType;
var localized string LocDemoSummaryDemoTypeServer;
var localized string LocDemoSummaryDemoTypeClient;
var localized string LocDemoSummaryFrames;
var localized string LocDemoSummaryPlayTime;
var localized string LocDemoSummaryMinSeconds;
var localized string LocDemoSummaryAvgFPS;
var localized string LocDemoSummaryCheatProtection;
var localized string LocDemoSummaryNone;
var localized string LocDemoSummaryCachedAs;
var localized string LocDemoSummaryFileRequirements;
var localized string LocDemoSummaryBonusPack1;
var localized string LocDemoSummaryBonusPack4;
var localized string LocDemoSummaryRocketArena;
var localized string LocDemoSummarySize;
var localized string LocDemoSummaryBytes;

event PackageRequired (string package, int size, bool Installed, GUID myGUID, int gen, bool Cached){
	if (bBlocked)
		return;
	if (package == "")
		package = " ";
	if (!Installed)
		Cached = false; //just in case...
	Control.Packages.AddPackage(Package,Size,2*byte(Installed)-byte(Cached),myGUID,gen).CheckPBI(Control.PBI);
	//control.GetPlayerowner().ClientMessage(package@"is of size"@size@"and is Installed?"@Installed);
}

event DemoReadDone(string Map, bool bServerDemo, float Time, int NumFrames){
	local int i;
	local DemoList MapItem;
	if (bBlocked)
		return;
	Control.UserWindow.LastDemoItem.MapName = Map;
	Control.UserWindow.LastDemoItem.bServerDemo = bServerDemo;
	Control.UserWindow.LastDemoItem.NumFrames = NumFrames;
	Control.UserWindow.LastDemoItem.PlayTime = Time;
	Control.UserWindow.ShotTime = 1;
	//force .unr extension on maps (for more efficient downloading)
	MapItem = Control.Packages.FindPackage(Map);
	i = InStr(MapItem.PackageName, ".");
	if (i == -1)
		MapItem.PackageName = MapItem.PackageName $ ".unr";
}
//summarize info:
function bool SaveInfo(){
	local UDComboListItem Demo;
	local string Save, N;
	local DemoList Package, CSHP;

	Demo = Control.UserWindow.LastDemoItem;

	for (Package = DemoList(control.Packages.Next); Package != None; Package = DemoList(Package.Next))
		if (Package.bIsCSHP)
			break;

	N = Chr(13) $ Chr(10); //new line :)
	CSHP = Package;
	//write stuff here:
	Save = LocDemoSummary $ N $ 
		LocDemoSummaryAvailable $ N $ N $ 
		Demo.Value $ ".dem " $ LocDemoSummaryInformation $ N $ 
		LocDemoSummaryMapName @ Demo.MapName $ ".unr" $ N $ 
		LocDemoSummaryDemoType $ " ";

	if (Demo.bServerDemo)
		Save=Save $ LocDemoSummaryDemoTypeServer;
	else
		Save=Save $ LocDemoSummaryDemoTypeClient;

	Save = Save $ N $ Demo.NumFrames @ LocDemoSummaryFrames $ N $ 
		LocDemoSummaryPlayTime @ class'DemoSettings'.static.ParseTime(Demo.PlayTime) @ LocDemoSummaryMinSeconds $ N $ 
		LocDemoSummaryAvgFPS @ Demo.NumFrames/Demo.PlayTime $ N $ 
		LocDemoSummaryCheatProtection @ Control.PBI.CSHPVer.GetValue();

	if (Control.PBI.CSHPVer.GetValue() != LocDemoSummaryNone)
		 Save = Save $ ".u (" $ LocDemoSummaryCachedAs $ " '" $ GUIDstring(CSHP.PackageGUID) $ ".uxx')";

	Save = Save $ N $ N $ 
		LocDemoSummaryFileRequirements;

	if (Control.PBI.UsesBp1)
		Save = Save $ N $ "- " $ LocDemoSummaryBonusPack1;

	if (Control.PBI.UsesBp4)
		Save = Save $ N $ "- " $ LocDemoSummaryBonusPack4;

	if (Control.PBI.UsesRA)
		Save=Save $ N $ "- " $ LocDemoSummaryRocketArena;

	for (Package = DemoList(control.Packages.Next); Package != None; Package = DemoList(Package.Next))
		if (!Package.bPBIShows)
			Save = Save $ N $ 
				Package.PackageName $ "(" $ LocDemoSummaryCachedAs $ 
				" '" $ GUIDstring(Package.PackageGUID) $ ".uxx') - " $ 
				LocDemoSummarySize $ ": " $ Package.PackageSize$LocDemoSummaryBytes;

	return WriteDemoInfo(Demo.Value2 $ Demo.Value, Save);
}

defaultproperties
{
	LocDemoSummary="Demo summary auto-generated by Unreal Tournament Demo Manager 3.0 BETA"
	LocDemoSummaryAvailable="Available at http://www.usaar33.com"
	LocDemoSummaryInformation="Information:"
	LocDemoSummaryMapName="Map name:"
	LocDemoSummaryDemoType="Demo Type:"
	LocDemoSummaryDemoTypeServer="Server-side"
	LocDemoSummaryDemoTypeClient="Client-side"
	LocDemoSummaryFrames="frames"
	LocDemoSummaryPlayTime="Play Time:"
	LocDemoSummaryMinSeconds="(min:seconds)"
	LocDemoSummaryAvgFPS="Avg. FPS:"
	LocDemoSummaryCheatProtection="Cheat Protection:"
	LocDemoSummaryNone="None"
	LocDemoSummaryCachedAs="cached as"
	LocDemoSummaryFileRequirements="File Requirements:"
	LocDemoSummaryBonusPack1="Bonus Pack 1"
	LocDemoSummaryBonusPack4="Bonus Pack 4"
	LocDemoSummaryRocketArena="Rocket Arena"
	LocDemoSummarySize="size"
	LocDemoSummaryBytes="bytes"
}
